
@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>

<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control"/>
            <span id="customerDiscountRate"></span>
        </div>
    </div>

    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie" data-rule-atLeastOneMovie="true" type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <ul id="movies" class="list-group"></ul>
            <div id="priceContainer"></div>
        </div>
    </div>

    <button class="btn btn-primary tt-button">Submit</button>
</form>

@section scripts 
    {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
       

        $(document).ready(function () {
            var vm = {
                movieIds: [],
            };
            var totalRentalPrice = 0;
            var membershipDiscountRate = 0;

            function getTotalPrice(priceSum, moviePrice) {
                if ($("#priceContainer").html() === "") {
                    priceSum = moviePrice

                    $("#priceContainer").append("<div class = 'list-group-item movieElement'><p style = 'font-weight:bold'>Total Price</p><p class = 'price totalPrice'>$" + priceSum.toFixed(2) + "</p></div>");
                    totalRentalPrice = priceSum;
                } else {
                    priceSum += +moviePrice

                    $(".totalPrice")
                        .empty()
                        .append("$" + priceSum.toFixed(2));

                    totalRentalPrice = priceSum;
                }
            }

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                //prefetch: {
                //    url: '/api/customers',
                //    cache:false
                //}
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });


            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                //prefetch: {
                //    url: '/api/movies',
                //    cache: false
                //}
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'customers',
                display: 'name',
                source: customers
            }).on("typeahead:select", function (e, customer) {
                if (customer.badCustomer === true) {
                    $("#customerDiscountRate").empty();
                    $("#customer").typeahead("val", "");
                    return toastr.error("The customer has a bad record.");
                }
                var discountRate = customer.membershipType.discountRate

                $("#customerDiscountRate")
                    .empty()
                    .append(`customer discount rate: ${discountRate}%`);

                membershipDiscountRate = discountRate / 100;

                vm.customerId = customer.id;

                $("#movie").typeahead("val", "");
                $("#movies").empty();
                $("#priceContainer").empty();
            });

            $('#movie').typeahead({
                minLenght: 3,
                highlight: true
            } , {
                name: 'movies',
                display: 'name',
                source: movies
            }).on("typeahead:select", function (e, movie) {
                var moviePrice = (movie.price - movie.price * membershipDiscountRate);

                if (movie.numberAvailable <= 0) {
                    return toastr.error("Movie is not available.");
                }

                if (vm.movieIds.length >= 5) {
                    return toastr.error("Can't exceed 5 movies at a time")
                }

                $("#movies").append("<li class = 'list-group-item movieElement'><p>" + movie.name + "</p><p class = 'price'>$" + moviePrice.toFixed(2) + "</p></li>");

                getTotalPrice(totalRentalPrice, moviePrice);
                console.log(moviePrice)

                $("#movie").typeahead("val", "");

                vm.movieIds.push(movie.id);
            });

            $.validator.addMethod("validCustomer", function () {
                return vm.customerId && vm.customerId !== 0;
            }, "Please select a valid customer.");

            $.validator.addMethod("atLeastOneMovie", function () {
                return vm.movieIds.length > 0;
            }, "Please select at least one movie.");

            $.validator.setDefaults({
                ignore: ':hidden, .tt-hint'
            });

            var validator = $("#newRental").validate({
                submitHandler: function () {
                    $.ajax({
                        url: "/api/newRentals",
                        method: "POST",
                        data: vm
                    })
                        .done(function () {
                            toastr.success("Rental successfully recorded.")

                            $("#customer").typeahead("val", "");
                            $("#movie").typeahead("val", "");
                            $("#movies").empty();
                            $("#priceContainer").empty();
                            $("#customerDiscountRate").empty();

                            vm = { movieIds: [] };

                            validator.resetForm();
                        })
                        .fail(function () {
                            toastr.error("Something unexpected happened.")
                        });

                    return false;
                }
            });
        })
    </script>
    }
